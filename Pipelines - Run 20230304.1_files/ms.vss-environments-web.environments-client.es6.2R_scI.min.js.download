"use strict";define("Environments/Client",["require","exports","Tfs/Platform/Page","DistributedTask/Client/RestClient/TaskAgent","VSS/Platform/Context","ServiceEndpoints/Client/RestClient/ServiceEndpoint"],(function(e,t,n,r,i,o){var s,a,c,v;!function(e){s=t.Constants={};class n{}t.Constants.ServiceInstanceIds=n,n.Tfs="00025394-6065-48ca-87d9-7f5672854ef7";class r{}t.Constants.DataProviderIds=r,r.EnvironmentDataProvider="ms.vss-environments-web.environment-details-data-provider",r.EnvironmentRunJobsDataProvider="ms.vss-environments-web.environment-rundetails-jobs-data-provider",r.EnvironmentRunCommitsDataProvider="ms.vss-environments-web.environment-rundetails-commits-data-provider",r.EnvironmentRunWorkitemsDataProvider="ms.vss-environments-web.environment-rundetails-workitems-data-provider",r.EnvironmentDeploymentHistoryDataProvider="ms.vss-environments-web.environment-deployment-history-data-provider",r.LinkedPipelineDefinitionsDataProvider="ms.vss-environments-web.environment-linked-pipelines-provider",r.EnvironmentResourcesTagUpdateDataProvider="ms.vss-environments-web.environment-resources-tag-update-data-provider",r.EnvironmentDeleteResourceDataProvider="ms.vss-environments-web.environment-delete-resource-data-provider";class i{}t.Constants.TabContributionIds=i,i.EnvironmentJobDetailsTab="ms.vss-environments-web.environment-rundetails-jobshistory-tab"}(),t[v="EnvironmentContracts"]={},(c=t[v].EnvironmentJobStatus||(t[v].EnvironmentJobStatus={}))[c.None=0]="None",c[c.Succeeded=1]="Succeeded",c[c.SucceededWithIssues=2]="SucceededWithIssues",c[c.Abandoned=4]="Abandoned",c[c.Canceled=8]="Canceled",c[c.Failed=16]="Failed",c[c.Skipped=32]="Skipped",c[c.InProgress=64]="InProgress",c[c.All=127]="All",function(e){a=t.PageContextHelper={};class r{static getAccountUri(e){const t=e.getService("IVssPageService").getData();if(t){let n=window.location.origin+t.hostPath;if(!this.isHostedType(e)){let t=r.getCollectionName(e);n=n.replace(`/${t}/`,"")}return n}}static getProject(e){const t=(0,n.getTFSPageData)(e);if(t&&t.project)return t.project}static getCurrentUserId(e){const t=e.getService("IVssPageService").getData();return t?t.user.id:null}static getProjectName(e){const t=(0,n.getTFSPageData)(e);if(t&&t.project)return t.project.name}static getProjectId(e){const t=(0,n.getTFSPageData)(e);if(t&&t.project)return t.project.id}static isHostedType(e){const t=e.getService("IVssPageService").getData();return!!t&&t.isHosted}static isSSLEnabled(e){const t=e.getService("IVssPageService").getData();return!!t&&t.isSslOnly}static getCollectionName(e){const t=e.getService("IVssPageService").getData();return t?t.hostName:""}}t.PageContextHelper.PageContextHelper=r}(),function(e){t.EnvironmentDeploymentHistoryService={};class n extends i.VssService{getEnvironmentDeploymentExecutionRecords(e,t,n,r,i,o=10){return this.pageContext.getService("IVssContributionService").getData(s.DataProviderIds.EnvironmentDeploymentHistoryDataProvider)}getEnvironmentDeploymentExecutionRecordsAsync(e,t,n,r,i,o=25,a=!0){let c={id:e,resourceId:t,definitionId:n,status:r,continuationToken:i,top:o};return this.pageContext.getService("IVssContributionService").getDataAsync(s.DataProviderIds.EnvironmentDeploymentHistoryDataProvider,c,a,s.ServiceInstanceIds.Tfs)}getEnvironmentDeploymentExecutionRecordsRestApi(e,t,n=25){const r=t?t.toString():"";return this._getClient().getEnvironmentDeploymentExecutionRecords(this._getProjectName(),e,r,n)}getEnvironmentStageJobs(e,t){let n={id:e,continuationToken:t,top:1,view:"jobshistory"};const r=this.pageContext.getService("IVssContributionService");let i=r.getData(s.DataProviderIds.EnvironmentRunJobsDataProvider,n);if(i||(i=r.getData(s.DataProviderIds.EnvironmentRunJobsDataProvider)),i&&i.jobs)return i}getEnvironmentStageJobsAsync(e,t){let n={id:e,continuationToken:t,top:1,view:"jobshistory"};return this.pageContext.getService("IVssContributionService").getDataAsync(s.DataProviderIds.EnvironmentRunJobsDataProvider,n,!1,s.ServiceInstanceIds.Tfs)}getLinkedPipelineDefinitions(e){this.pageContext.getService("IVssContributionService");return Promise.resolve([])}_getClient(){return(0,r.getTaskAgentClient)(this.pageContext)}_getProjectName(){const e=a.PageContextHelper.getProjectName(this.pageContext);if(e)return e;throw new Error("Release rest client :: Project is not available in page data. Cannot make this network call without project information")}}i.Services.add("IEnvironmentDeploymentHistoryService",{serviceFactory:n})}(),function(e){t.EnvironmentService={};class n extends i.VssService{addEnvironment(e){return this._getClient().addEnvironment(e,this._getProjectName())}deleteEnvironment(e){return this._getClient().deleteEnvironment(this._getProjectName(),e)}getEnvironmentById(e,t=0){return this._getClient().getEnvironmentById(this._getProjectName(),e,t)}getEnvironmentFromPageData(){const e=this.pageContext.getService("IVssContributionService").getData("ms.vss-environments-web.environment-resources-view-data-provider");return e?e.environment:void 0}updateEnvironment(e,t){return this._getClient().updateEnvironment(e,this._getProjectName(),t)}getServiceEndpoints(e){return this._getServiceEndpointsClient().getServiceEndpoints(this._getProjectName(),e)}addKubernetesResource(e,t){return this._getClient().addKubernetesResource(e,this._getProjectName(),t)}updateKubernetesResource(e,n){return(0,t.RestClientEnvironments.getEnvironmentsClient)(this.pageContext).updateKubernetesResource(e,this._getProjectName(),n)}addVirtualMachinesResource(e,t){return this._getClient().addVirtualMachineGroup(e,this._getProjectName(),t)}getEnvironmentScopedPAT(e){return(0,t.RestClientEnvironments.getEnvironmentsClient)(this.pageContext).generateEnvironmentAccessToken(this._getProjectName(),e)}deleteResource(e,t,n){switch(n){case 4:return this._getClient().deleteKubernetesResource(this._getProjectName(),e,t);case 2:return this._getClient().deleteVirtualMachineGroup(this._getProjectName(),e,t);default:return Promise.reject("The specified resource type is not supported.")}}getServiceEndpoint(e){return this._getServiceEndpointsClient().getServiceEndpointDetails(this._getProjectName(),e)}createServiceEndpoint(e){return this._fillServiceEndpointProjectReferences(e,this._getProjectId()),this._getServiceEndpointsClient().createServiceEndpoint(e)}updateServiceEndpoint(e,t){return this._fillServiceEndpointProjectReferences(e,this._getProjectId()),this._getServiceEndpointsClient().updateServiceEndpoint(e,t)}deleteServiceEndpoint(e){return this._getServiceEndpointsClient().deleteServiceEndpoint(e,[this._getProjectId()])}getAzureSubscriptions(){return this._getServiceEndpointsClient().getAzureSubscriptions()}executeServiceEndpointRequestResult(e,t){return this._getServiceEndpointsClient().executeServiceEndpointRequest(e,this._getProjectName(),t)}getAADTenantId(){return this._getTaskAgentClient().getVstsAadTenantId()}updateEnvironmentResourceTags(e,t,n){const r={resourceId:e.toString(),resourceType:t.toString(),newTagsSet:n};return this.pageContext.getService("IVssContributionService").getDataAsync(s.DataProviderIds.EnvironmentResourcesTagUpdateDataProvider,r)}deleteEnvironmentResource(e,t){const n={resourceId:e.toString(),resourceType:t.toString()};return this.pageContext.getService("IVssContributionService").getDataAsync(s.DataProviderIds.EnvironmentDeleteResourceDataProvider,n)}_getProjectName(){const e=a.PageContextHelper.getProjectName(this.pageContext);if(e)return e;throw new Error("Release rest client :: Project is not available in page data. Cannot make this network call without project information")}_getProjectId(){const e=a.PageContextHelper.getProjectId(this.pageContext);if(e)return e;throw new Error("Release rest client :: Project is not available in page data. Cannot make this network call without project information")}_getClient(){return(0,r.getTaskAgentClient)(this.pageContext)}_getServiceEndpointsClient(){return(0,o.getServiceEndpointClient)(this.pageContext)}_getTaskAgentClient(){return(0,r.getTaskAgentClient)(this.pageContext)}_fillServiceEndpointProjectReferences(e,t){e.serviceEndpointProjectReferences=[{name:e.name,description:e.description,projectReference:{id:t,name:""}}]}getCommits(e){const t={top:e||"",view:"commits"},n=this.pageContext.getService("IVssContributionService");let r=n.getData(s.DataProviderIds.EnvironmentRunCommitsDataProvider,t);if(r||(r=n.getData(s.DataProviderIds.EnvironmentRunCommitsDataProvider)),r&&r.commits)return r}getCommitsAsync(e){const t={top:e||"",view:"commits"};return this.pageContext.getService("IVssContributionService").getDataAsync(s.DataProviderIds.EnvironmentRunCommitsDataProvider,t,!0)}getWorkitems(e){const t={top:e||"",view:"workitems"},n=this.pageContext.getService("IVssContributionService");let r=n.getData(s.DataProviderIds.EnvironmentRunWorkitemsDataProvider,t);if(r||(r=n.getData(s.DataProviderIds.EnvironmentRunWorkitemsDataProvider)),r&&r.workitems)return r}getWorkitemsAsync(e){const t={top:e||"",view:"workitems"};return this.pageContext.getService("IVssContributionService").getDataAsync(s.DataProviderIds.EnvironmentRunWorkitemsDataProvider,t,!0)}}i.Services.add("IEnvironmentService",{serviceFactory:n})}()}),["Constants","EnvironmentContracts","PageContextHelper","EnvironmentDeploymentHistoryService","EnvironmentService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-environments-web.environments-client"}}));